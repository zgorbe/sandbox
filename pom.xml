<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.zotyo.sandbox</groupId>
	<version>1.0</version>
	<artifactId>sandbox</artifactId>
	<packaging>jar</packaging>
	<name>sandbox webapp</name>

	<dependencies>
		<!-- Log4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>		
		<!-- Jetty -->
		<dependency>
			<groupId>org.eclipse.jetty.aggregate</groupId>
			<artifactId>jetty-all-server</artifactId>
			<version>8.1.16.v20140903</version>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1-glassfish</artifactId>
			<version>2.1.v20100127</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>sandbox</finalName>
		<resources>
			<resource>
				<directory>src/main/resources/common</directory>
			</resource>
		</resources>		
		<plugins>
			<!-- The maven app assembler plugin will generate a script that sets up 
				the classpath and runs your project -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.8</version>
				<configuration>
					<assembleDirectory>target</assembleDirectory>
					<programs>
						<program>
							<mainClass>com.zotyo.Main</mainClass>
							<name>sandbox</name>
						</program>
					</programs>
					<!--extraJvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,address=5000,server=y,suspend=n</extraJvmArguments -->
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources/dev</directory>
					</resource>
				</resources>
				<plugins>
					<plugin>
			            <groupId>org.apache.maven.plugins</groupId>
			            <artifactId>maven-compiler-plugin</artifactId>
			            <version>3.2</version>
			            <configuration>
			                <source>1.6</source>
			                <target>1.6</target>
			            </configuration>
			        </plugin>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>0.0.15</version>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<npmVersion>1.4.12</npmVersion>
									<nodeVersion>v0.10.29</nodeVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>gulp build</id>
								<goals>
		                            <!-- Executes the 'default' task in gulpfile.js -->
									<goal>gulp</goal>
								</goals>
							</execution>
						</executions>
					</plugin>				
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources/prod</directory>
					</resource>
				</resources>
			</build>
		</profile>		
	</profiles>
</project>

